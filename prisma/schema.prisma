// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Place {
  id   Int    @id @default(autoincrement())
  name String @unique
  School School[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique

  School School[]
}

model School {
  id          Int       @id @default(autoincrement())
  name        String    @db.LongText
  aboutUs     String    @db.LongText
  logo        String    @db.LongText
  rating      Float     @default(0)
  showReviews Boolean   @default(false)
  toppers     Toppers[]
  awards      Awards[]
  locationMap String?   @db.LongText
  contact     Contact?
  facilities  Facility[]
  events      Event[]
  images      Image[]
  videos      Video[]
  reviews     Review[]
  area        Place     @relation(fields: [areaId], references: [id])
  areaId      Int
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  advertise   Boolean   @default(false)
}

model GlobalSettings {
  id             Int     @id @default(autoincrement())
  advertiseTime  Int     @default(3)
}


model Merchant {
  id          Int       @id @default(autoincrement())
  name        String    @db.LongText
  aboutUs     String    @db.LongText
  logo        String    @db.LongText
  rating      Float     @default(0)    
  locationMap String?    @db.LongText
  contact     Contact?  
  images      Image[]
  videos      Video[]
  reviews     Review[]
}

model Contact {
  id        Int       @id @default(autoincrement())
  email     String    @db.LongText
  location  String    @db.LongText
  number    String    @db.LongText
  website   String?    @db.LongText
  facebook  String?    @db.LongText
  youtube   String?    @db.LongText
  instagram String?    @db.LongText
  twitter   String?    @db.LongText
  linkedin  String?    @db.LongText
  opening   String?    @db.LongText
  school    School?   @relation(fields: [schoolId], references: [id])
  schoolId  Int?      @unique
  merchant  Merchant? @relation(fields: [merchantId], references: [id])
  merchantId Int?     @unique
}

model Image {
  id         Int       @id @default(autoincrement())
  url        String    @db.LongText
  alt        String?    @db.LongText
  schoolId   Int?
  merchantId Int?
  school     School?   @relation(fields: [schoolId], references: [id])
  merchant   Merchant? @relation(fields: [merchantId], references: [id])
}


model Video {
  id         Int       @id @default(autoincrement())
  src        String    @db.LongText
  title      String    @db.LongText
  schoolId   Int?
  merchantId Int?
  school     School?   @relation(fields: [schoolId], references: [id])
  merchant   Merchant? @relation(fields: [merchantId], references: [id])
}

model Review {
  id         Int       @id @default(autoincrement())
  name       String    @db.LongText
  message    String    @db.LongText
  date       DateTime
  rating     Int    
  schoolId   Int?
  merchantId Int?
  school     School?   @relation(fields: [schoolId], references: [id])
  merchant   Merchant? @relation(fields: [merchantId], references: [id])
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String    @db.LongText
  description String    @db.LongText
  image       String?    @db.LongText
  schoolId    Int
  date        DateTime @default(now())
  advertise   Boolean  @default(false)
  school      School   @relation(fields: [schoolId], references: [id])
}

model Facility {
  id         Int       @id @default(autoincrement())
  name       String    @db.LongText
  schoolId   Int?
  merchantId Int?
  school     School?   @relation(fields: [schoolId], references: [id])
}

model Awards {
  id          Int      @id @default(autoincrement())
  title       String    @db.LongText
  description String    @db.LongText
  image       String?    @db.LongText
  schoolId    Int
  date        DateTime @default(now())
  school      School   @relation(fields: [schoolId], references: [id])
}

model Toppers {
  id          Int      @id @default(autoincrement())
  title       String    @db.LongText
  description String    @db.LongText
  image       String?    @db.LongText
  schoolId    Int
  date        DateTime @default(now())
  advertise   Boolean  @default(false)
  school      School   @relation(fields: [schoolId], references: [id])
}

